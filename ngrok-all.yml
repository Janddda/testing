region: us
console_ui: true
compress_conn: false
http_proxy: false
inspect_db_size: 50000000
log_level: info
log_format: json
log: /var/log/ngrok.log
metadata: '{"serial": "00012xa-33rUtz9", "comment": "For customer alan@example.com"}'
root_cas: trusted
socks5_proxy: "socks5://localhost:9150"
update: false
update_channel: stable
web_addr: localhost:4040
tunnels:
  website:
    addr: 8888
    auth: bob:bobpassword
    bind_tls: true
    host_header: "myapp.dev"
    inspect: false
    proto: http
    subdomain: myapp

  e2etls:
    addr: 9000
    proto: tls
    hostname: myapp.example.com
    crt: example.crt
    key: example.key

  ssh-access:
    addr: 22
    proto: tcp
    remote_addr: 1.tcp.ngrok.io:12345

#proto		required all	tunnel protocol name, one of http, tcp, tls
#addr		required all	forward traffic to this local port number or network address
#inspect	all		enable http request inspection
#auth		http		HTTP basic authentication credentials to enforce on tunneled requests
#host_header	http		Rewrite the HTTP Host header to this value, or preserve to leave it unchanged
#bind_tls	http		bind an HTTPS or HTTP endpoint or both true, false, or both
#subdomain	http tls	subdomain name to request. If unspecified, uses the tunnel name
#hostname	http tls	hostname to request (requires reserved name and DNS CNAME)
#crt		tls		PEM TLS certificate at this path to terminate TLS traffic before forwarding locally
#key		tls		PEM TLS private key at this path to terminate TLS traffic before forwarding locally
#client_cas	tls		PEM TLS certificate authority at this path will verify incoming TLS client connection certificates.
#remote_addr	tcp		bind the remote TCP port on the given address
